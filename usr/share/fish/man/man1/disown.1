.TH "disown" 1 "Sun Nov 26 2017" "Version 2.7.0" "fish" \" -*- nroff -*-
.ad l
.nh
.SH NAME
disowndisown - remove a process from the list of jobs 
 \- 
.PP
.SS "Synopsis"
.PP
.nf

\fBdisown\fP [ PID \&.\&.\&. ]
.fi
.PP
.SS "Description"
\fCdisown\fP removes the specified \fCjob\fP from the list of jobs\&. The job itself continues to exist, but fish does not keep track of it any longer\&.
.PP
Jobs in the list of jobs are sent a hang-up signal when fish terminates, which usually causes the job to terminate; \fCdisown\fP allows these processes to continue regardless\&.
.PP
If no process is specified, the most recently-used job is removed (like \fCbg\fP and \fCfg\fP)\&. If one or more \fCPID\fPs are specified, jobs with the specified process IDs are removed from the job list\&. Invalid jobs are ignored and a warning is printed\&.
.PP
If a job is stopped, it is sent a signal to continue running, and a warning is printed\&. It is not possible to use the \fCbg\fP builtin to continue a job once it has been disowned\&.
.PP
The PID of the desired process is usually found by using \fCprocess expansion\fP, which can specify jobs or search by process name\&.
.PP
\fCdisown\fP returns 0 if all specified jobs were disowned successfully, and 1 if any problems were encountered\&.
.SS "Example"
\fCfirefox &; disown\fP will start the Firefox web browser in the background and remove it from the job list, meaning it will not be closed when the fish process is closed\&.
.PP
\fCdisown (jobs -p)\fP removes all jobs from the job list without terminating them\&. 
